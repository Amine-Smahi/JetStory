// <auto-generated />

using JetStoryAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace JetStoryAPI.Migrations
{
  [DbContext(typeof(StoryContext))]
  [Migration("20180226214352_AddWriters")]
  partial class AddWriters
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
        .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

      modelBuilder.Entity("JetStoryAPI.Models.Story", b =>
      {
        b.Property<int>("Id")
          .ValueGeneratedOnAdd();

        b.Property<string>("Category");

        b.Property<string>("Name");

        b.Property<int>("Time");

        b.Property<string>("publishedDate");

        b.Property<int?>("writerId");

        b.HasKey("Id");

        b.HasIndex("writerId");

        b.ToTable("Stories");
      });

      modelBuilder.Entity("JetStoryAPI.Models.Writer", b =>
      {
        b.Property<int>("Id")
          .ValueGeneratedOnAdd();

        b.Property<string>("Name");

        b.HasKey("Id");

        b.ToTable("Writers");
      });

      modelBuilder.Entity("JetStoryAPI.Models.Story", b =>
      {
        b.HasOne("JetStoryAPI.Models.Writer", "writer")
          .WithMany()
          .HasForeignKey("writerId");
      });
#pragma warning restore 612, 618
    }
  }
}